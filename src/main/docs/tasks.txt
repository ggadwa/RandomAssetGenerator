

- concrete next, bigger expansion joints, stains aren't showing up



# loadtexture, buffertexture, etc to walkviewtexture
# do model view first, attach to each mesh

# get rid of bone.meshIdx, vertexes need bone list (size=4 short and 4 float weight per vertex)
# have joint buffers in skeleton



animations:
--> on view mesh load, don't remake skeletons by adding in the absolute bone offset
--> create a matrix (with just transpose) and put shader to start
--> then do joints
--> mesh will need per vertex joint and weight array (probably in wrap)
--> will need a parallel joint matrix for every skeleton bone

        // calculate the skin animation
        // and vertex position, if skinning, calc
        // the skin matrix otherwise just attach to node
        // by its matrix

        // note we build the normalMatrix here,
        // this is costly but has to be done because of the
        // skin matrix

NOTE: x/y/z/w are used to point to one weight and one matrix


for (n=0;n!==this.core.MAX_SKELETON_JOINT;n++) {
            name='jointMatrix['+n+']';
            this.jointMatrixUniformArray.push(gl.getUniformLocation(this.program,name));
        }



uniform highp mat4 jointMatrix[64];


    highp vec4 pos;
    highp mat3 normalMatrix;

    if (!noSkin) {
        highp mat4 skinMatrix=(vertexWeight.x*jointMatrix[int(vertexJoint.x)])+(vertexWeight.y*jointMatrix[int(vertexJoint.y)])+(vertexWeight.z*jointMatrix[int(vertexJoint.z)])+(vertexWeight.w*jointMatrix[int(vertexJoint.w)]);
        pos=viewMatrix*modelMatrix*skinMatrix*vec4(vertexPosition,1.0);
        normalMatrix=transpose(inverse(mat3(viewMatrix)*mat3(modelMatrix)*mat3(skinMatrix)));
    }
    else {
        pos=viewMatrix*modelMatrix*noSkinAttachedNodeMatrix*vec4(vertexPosition,1.0);
        normalMatrix=transpose(inverse(mat3(viewMatrix)*mat3(modelMatrix)*mat3(noSkinAttachedNodeMatrix)));
    }

--> save as:

            "name" : "Node_7",
            "rotation" : [
                -0.7071068286895752,
                0,
                0,
                0.7071068286895752
            ],
            "translation" : [
                0.003179544350132346,
                0.008089185692369938,
                -0.05187902972102165
            ]


map
 - thread bitmap creation
 - going up ramps is sometimes broken
 - open ceiling
 - windows
 - skybox has bad uv (lines)
 - put back in decorations

bitmaps
 - redo all bitmaps for textureSize for any numbers
 - gravel (like dirt)
 - more distinct control panels pieces (keyboard)
 - computer access panels have handles?

model
 - get rid of monitor on desk
 - add: chair, dresser, storage tank, pc (can put on desk), bookcase (books?), electrical box
 - some models need to have flags for "on wall" or "on desk, table, etc"
 - robot model needs to be chunkier
 - faces by meshes
 - animations
 - vertex snaps for humanoid, etc
 - finish junction
 - finish pipes
 - table: bars on legs
 - lab tube: extra pipes, maybe base, maybe control unit
 - humanoid / etc - more items (spikes, etc.)
 - oil tank

all
 - need to export tangents

sound
 - random silences in monster?

- try jpackage
c:/Java/jdk-17.0.2/bin/jpackage --name RandomAssetGenerator --input c:\Code\RandomAssetGenerator\target --main-jar RandomAssetGenerator-1.0.jar --main-class com.klinksoftware.rag.RandomAssetGenerator --win-dir-chooser --type EXE